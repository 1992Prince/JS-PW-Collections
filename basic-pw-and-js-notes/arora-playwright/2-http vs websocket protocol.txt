What is web socket and how it is different from the HTTP?

HTTP and WebSocket are both ways for computers to talk to each other, but they work in different ways. 
HTTP is used for simple requests, like when you load a webpage, where the computer sends a request and the server replies, 
then the connection is closed. WebSocket keeps the connection open, allowing for real-time, two-way communication, 
making it great for things like live chats or online games where constant updates are needed.

HTTP protocol
HTTP is unidirectional, where the client sends the request, and the server sends the response. 
Let's take an example when a user sends a request to the server this request goes in the form of HTTP or HTTPS, 
and after receiving a request server sends the response to the client, each request is associated with a corresponding response, 
and after sending the response the connection gets closed, each HTTP or HTTPS request establish a new connection to the server every time 
and after getting the response the connection gets terminated by itself. 


	HTTP Connection
	
	Client -------------------Request------------------>Server
	       <------------------Response-----------------
		   ----------Connection Terminated-------------
		  
		  
WebSocket
WebSocket is bidirectional, a full-duplex protocol that is used in the same scenario of client-server communication, 
unlike HTTP which starts from ws:// or wss://. It is a stateful protocol, which means the connection between client and 
server will stay alive until it gets terminated by either party (client or server). After closing the connection 
by either of the client or server, the connection is terminated from both ends.

It is mostly used where live chat applications are used

 WebSocket Connection
 
 Client ---------------Request------------------> Server
        <--------------Handshake----------------
		<---------------WebSocket--------------->
		
Here client sends connection request to server, then server make the connection and we call it handshake.
Handshake means , not communication channel is open for both parties and client can sends multiple requests to server.
And connection will be terminated only when any party from both sides will break it.